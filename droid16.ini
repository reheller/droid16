# DROID16.ini reheller DROID patch $Revision: 1.5 $, firmware blue-4, see _THIS_IS in Master section!

# $Header: /Users/reheller/DROID\040Patches/RCS/droid16.ini,v 1.5 2024/03/12 22:09:48 reheller Exp reheller $
# 
# Patch with 3 Encoquencers (first one optionally Arpeggiator) + FOLD + RIBN quantizer
# 
# Done:
# - a lot of changes for Pots, Buttons, LEDs, Encoders
# - change sorting elements from by layer to by controller (pots/buttons/leds/encoders)
# - only use 4 layers
# - reintroduce the FOLD circuit
# - enable keyboard input and recording into Encoquencer(s)
# - chord circuit going to MIDI TRS out
# - move SLEW buttons B1.4 to pot P2.8 with discrete = 4
# - implement copy/paste on B1.4 (copy=shortpress, paste=longpress)
# - use buttons on encoder1/D as encoquencer specific reset
# - use buttons on encoder2/D to toggle a RUN encoquencer flipflop
# 
# Active:
# -
# 
# Planned:
# - firmware blue-5 updates
# 
# DROID master with X7 interface and controllers 1 (p2b8), 2 (p10), 3 (p2b8), 4 (p2b8), 5 (e4), 6 (e4)
# Master CLK as an LFO on P1.1, optionally I1 is master CLK input.
# CLK can be switched on/off with B1.1 (not layered), RESET is on B1.2 (layer A)
# RUN_CLK is normalized to N4, output on G9 and a second CLK (divided/multiplied) on G10
# 
# Layers of buttons and pots are switched with P1.2,
# LEDs R5..R8 display (pulsing in _THIS_IS color) the active layer (selectat 0..3 for pot and button circuits)
# 
# Arpeggiator runs on I3/N3, uses Layer D of Controller 4 for DIR/PINGPONG/etc.
# and Layer A of Controller 3 for Note SELECTs and Root/Degree from EQ1
# Arp.CLK uses MASTER_CLK or active steps of Encoquencer EQ1 (or EQ2)
# 
# Encoquencers:
# Encoquencers EQ1/EQ2/EQ3 mostly use Layer A/B/C
# For Pitch, Gates and more the Encoquencers use the e4 controllers with 2 pages for max 16 steps
# EQ1 SELECTs (chord steps) are shared with ARPeggiator on Layer A of Controller 3
# the other EQs have their own steps on Layer B and C
# 
# ADSR Envelope values are controlled by P2.3, P2.5, P2.7, P2.9 Layer A/B/C
# Envelope Level ("Volume") is on P2.4 Layer A/B/C, Shape on P2.6 A/B/C
# 
# Voltages for specific colors at outputs R1..R32 (R1..8 inputs, R9..16 outputs, R25..32 X7)
# also valid in pot parameter ledgauge!
# 
# 0.2 cyan    - algoquencer stuff
# 0.4 green   - clocks
# 0.6 yellow  - gates, arpeggiator stuff
# 0.73 orange - envelopes
# 0.8 red     - layer, reset, harm_next
# 1.0 magenta - pitch
# 1.1 violet  - vibrato, ribbon pitch
# 1.2 blue    - euclidian, fold circuits
# 
# degree = mode list
# 0 : lyd – Lydian major scale (it has a #4)
# 1 : maj – Normal major scale (ionian)
# 2 : X7 – Mixolydian (dominant seven chords)
# 3 : sus – mixolydian with 3rd/4th swapped
# 4 : alt – Altered scale
# 5 : hm5 – Harmonic minor scale from the 5th
# 6 : dor – Dorian minor (minor with #13)
# 7 : min – Natural minor (aeolian)
# 8 : hm – Harmonic minor (b6 but #7)
# 9 : phr – Phrygian minor scale (with b9)
# 10 : dim – Diminished scale (whole/half tone)
# 11 : aug – Augmented scale (just whole tones)
# 
# Fadermodes
# 0 : pitch / CV
# 1 : randomize CV
# 2 : gate propability
# 3 : repeats (up to 16)
# 4 : gate pattern
# 5 : ratchets (up to 8)
# 6 : gate
# 7 : skip
# 
# Buttonmodes
# 4 : gates
# 1 : start / end
# 2 : gate pattern
# 3 : skip

# INPUTS:
#  I1: [CLK] (green) external clock input (otherwise internal LFO square will be used)
#  I2: [RES] (red)   reset input
#  I3: [ACLK] (cyan,green,orange) arpeggiator clock normalization
#  I4: [EQ1 CLK] EQ1 clock normalization
#  I5: [N/C]
#  I6: [N/C]
#  I7: [N/C]
#  I8: [RIBN] Ribbon ctrlr input

# OUTPUTS:
#  O1: [EQ1 P] ARP or EQ1 pitch output
#  O2: [EQ1 E] ARP or EQ1 envelope output
#  O3: [EQ2 P] EQ2 pitch output
#  O4: [EQ2 E] EQ2 envelope output
#  O5: [EQ3 P] EQ3 pitch output
#  O6: [EQ3 E] EQ3 envelope output
#  O7: [FOLD] FOLD circuit output
#  O8: [RIBN Q] Ribbon ctrlr quantized output

# GATES ON X7:
#  G9: [CLK] (green) MASTER_CLK * CLOCK_ON
#  G10: [CLK2] (yellow) CLK Mult/Div
#  G11: [EQ1 St] (cyan/green/orange) EQ1 Start of Sequence
#  G12: [N/C]

# RGB LEDS:
#  R1: [CLK] (green)
#  R2: [RES] (red)
#  R3: [ARPCLK] (cyan,green,orange)
#  R4: [EQ1 CLK] (yellow?)
#  R5: [Lay A] display Layer A (blue pulse for droid16.ini)
#  R6: [Lay B] display Layer B (dito)
#  R7: [Lay C] display Layer C (dito)
#  R8: [Lay D] display Layer D (dito)
#  R9: [EQ1 P] (magenta, solid red when recording)
#  R10: [EQ1 E] (orange, solid red when recording)
#  R11: [EQ2 P] (as for EQ1)
#  R12: [EQ2 E] (as for EQ1)
#  R13: [EQ3 P] (as for EQ1)
#  R14: [EQ3 E] (as for EQ1)
#  R15: [FOLD] (blue)
#  R16: [RIBN Q]
#  R49: [Ld/Sv] (X7 Mode) shows bursts (1..4) in GREEN=LOAD, RED=SAVE for Presets
#  R50: 
#  R51: 
#  R52: 
#  R53: [CLK] (G9)        MASTER_CLK * CLOCK_ON (green)
#  R54: [CLK2] (G10)      Multiplied/Divided CLOCK
#  R55: [EQ1 St] (G11)    EQ1 Start of Sequence
#  R56: G12

# CONTROLLER 1:
#  P1.1: [CLK] Master CLOCK
#  P1.2: [LAY] Layer switching voltage for buttons and pots
#  B1.1: [RUN] CLOCK on
#  B1.2: [RES/S-L/Chr A] A: RESET       / B:                 / C: SAVE LOAD Preset / D: Chord Active
#  B1.3: [Comp/Deg0] A: EQ1 Composemode / B: EQ2 Composemode / C: EQ3 Composemode  / D: Degree 0
#  B1.4: [C-P/Deg1] A:  EQ1 Copy Paste  / B: EQ2 Copy Paste  / C: EQ3 Copy Paste   / D: Degree 1
#  B1.5: [FM0/Deg2 ] A: EQ1 Fadermode0  / B: EQ2 Fadermode0  / C: EQ3 Fadermode0   / D: Degree 2
#  B1.6: [FM1/Deg3 ] A: EQ1 Fadermode1  / B: EQ2 Fadermode1  / C: EQ3 Fadermode1   / D: Degree 3
#  B1.7: [FM2/Deg4 ] A: EQ1 Fadermode2  / B: EQ2 Fadermode2  / C: EQ3 Fadermode2   / D: Degree 4
#  B1.8: [BM /Deg5 ] A: EQ1 Buttonmode  / B: EQ2 Buttonmode  / C: EQ3 Buttonmode   / D: Degree 5

# CONTROLLER 2:
#  P2.1: [ROOT/TUN/PRE/FCV] A: ROOT NOTE     / B: Tuning Mode   / C: PRESET Nr     / D: FOLD CV
#  P2.2: [SLEW T/FBY] A:       EQ1 Slew Time / B: EQ2 Slew Time / C: EQ3 Slew Time / D: FOLD BY
#  P2.3: [Att/AStN] A:         Env1 Attack   / B: Env2 Attack   / C: Env3 Attack   / D: ARP Startnote
#  P2.4: [Level] A:            Env1 Level    / B: Env2 Level    / C: Env3 Level    / D:
#  P2.5: [Decay] A:            Env1 Decay    / B: Env2 Decay    / C: Env3 Decay    / D:
#  P2.6: [Shape] A:            Env1 Shape    / B: Env2 Shape    / C: Env3 Shape    / D:
#  P2.7: [Sust/ChGL] A:        Env1 Sustain  / B: Env2 Sustain  / C: Env3 Sustain  / D: Chord Gate Length
#  P2.8: [SLEW/ChSp] A:        EQ1 SLEW UpDn / B: EQ2 SLEW UpDn / C: EQ3 SLEW UpDn / D: Chord Spread
#  P2.9: [Rel/ChP] A:          Env1 Release  / B: Env2 Release  / C: Env3 Release  / D: Chord Pitch
#  P2.10: [CVBase/ChI] A:      EQ1 cvbase    / B: EQ2 cvbase    / C: EQ3 cvbase    / D: Chord Inversion

# CONTROLLER 3:
#  P3.1: [Shift/FMAX] A: EQ1 Shift Steps  / B: EQ2 Shift Steps  / C: EQ3 Shift Steps  / D: FOLD MAX
#  P3.2: [L Cha/FMIN] A: EQ1 Lucky Chance / B: EQ2 Lucky Chance / C: EQ3 Lucky Chance / D: FOLD MIN
#  B3.1: [Sel1/Deg6] A:    EQ1 sel root   / B: EQ2 sel root     / C: EQ3 sel root     / D: Degree 6
#  B3.2: [Sel3/Deg7] A:    EQ1 sel 3rd    / B: EQ2 sel 3rd      / C: EQ3 sel 3rd      / D: Degree 7
#  B3.3: [Sel5/Deg8] A:    EQ1 sel 5th    / B: EQ2 sel 5th      / C: EQ3 sel 5th      / D: Degree 8
#  B3.4: [Sel7/Deg9] A:    EQ1 sel 7th    / B: EQ2 sel 7th      / C: EQ3 sel 7th      / D: Degree 9
#  B3.5: [Sel9/RETRIG] A:  EQ1 sel 9th    / B: EQ2 sel 9th      / C: EQ3 sel 9th      / D: ENV No Retrigger
#  B3.6: [Sel11/RIBSC] A:  EQ1 sel 11th   / B: EQ2 sel 11th     / C: EQ3 sel 11th     / D: RIBN Scale
#  B3.7: [Sel13/RIBQo] A:  EQ1 sel 13th   / B: EQ2 sel 13th     / C: EQ3 sel 13th     / D: RIBN Q off
#  B3.8: [SelF/RIBF] A:    EQ1 sel FILLS  / B: EQ2 sel FILLS    / C: EQ3 sel FILLS    / D: RIBN Fills

# CONTROLLER 4:
#  P4.1: [CLK M/FRNG] A:  CLK2 Mult     / B: EQ2 CLK Mult / C: EQ3 CLK Mult / D: FOLD Range
#  P4.2: [CLK D/APAT] A:  CLK2 Div      / B: EQ2 CLK Div  / C: EQ3 CLK Div  / D: ARP Pattern
#  B4.1: [Page/AorEQ] A:  EQ1 Page      / B: EQ2 Page     / C: EQ3 Page     / D: ARP or EQ
#  B4.2: [Quant/ADrop] A: EQ1 Quant     / B: EQ2 Quant    / C: EQ3 Quant    / D: ARP Drop
#  B4.3: [Mute/APos] A:   EQ1 Mute      / B: EQ2 Mute     / C: EQ3 Mute     / D: ARP Position
#  B4.4: [Run/AButt] A:   EQ1 Run       / B: EQ2 Run      / C: EQ3 Run      / D: ARP Butterfly
#  B4.5: [NuDn/ARange] A: EQ1 NudgeDn   / B: EQ2 NudgeDn  / C: EQ3 NudgeDn  / D: ARP Range
#  B4.6: [NuUp/AddOct] A: EQ1 NudgeUp   / B: EQ2 NudgeUp  / C: EQ3 NudgeUp  / D: ARP AddOct
#  B4.7: [Rec/A Dir] A:   EQ1 Record    / B: EQ2 Record   / C: EQ3 Record   / D: ARP Direction
#  B4.8: [Ping/APong] A:  EQ1 PingPong  / B: EQ2 PingPong / C: EQ3 PingPong / D: ARP PingPong

# CONTROLLER 5:
#  E5.1: [St1/EQ1 Cur, Reset] A: EQ1 Steps / B: EQ2 Steps / C: EQ3 Steps / D: EQ1 Current Step Display and RESET
#  E5.2: [St2/EQ2 Cur, Reset] A: EQ1 Steps / B: EQ2 Steps / C: EQ3 Steps / D: EQ2 Current Step Display and RESET
#  E5.3: [St3/EQ3 Cur, Reset] A: EQ1 Steps / B: EQ2 Steps / C: EQ3 Steps / D: EQ3 Current Step Display and RESET
#  E5.4: [St4/Lucky Amount] A:   EQ1 Steps / B: EQ2 Steps / C: EQ3 Steps / D: Lucky Amount

# CONTROLLER 6:
#  E6.1: [St5/EQ1 Last, Run] A: EQ1 Steps / B: EQ2 Steps / C: EQ3 Steps / D: EQ1 Last Step and RUN toggle
#  E6.2: [St6/EQ2 Last, Run] A: EQ1 Steps / B: EQ2 Steps / C: EQ3 Steps / D: EQ2 Last Step and RUN toggle
#  E6.3: [St7/EQ3 Last, Run] A: EQ1 Steps / B: EQ2 Steps / C: EQ3 Steps / D: EQ3 Last Step and RUN toggle
#  E6.4: [St8/Lucky Action] A: EQ1 Steps  / B: EQ2 Steps / C: EQ3 Steps / D: Lucky Action

[p2b8]
[p10]
[p2b8]
[p2b8]
[e4]
[e4]

# -------------------------------------------------
# MASTER DROID settings
# -------------------------------------------------

[droid]
    ledbrightness = 0.6
#   lpfilter1 = 0.5 # pitch AQ1/Arp
#   statusdump = _DUMP_STATUS

# [copy]
#   input = 0
#   output = _ROOT

[copy]
    input = 2V
    output = _TUNPITCH

# patch colors on R5..8:
# droid12.ini is yellow,
# droid13.ini is violet,
# droid16.ini is BLUE,
# droid22.ini is orange,
# droid32.ini is red
[copy]
    input = _BLUE
    output = _THIS_IS

# 0.2 cyan    - encoquencer stuff
[copy]
    input = 0.2
    output = _CYAN

# 0.4 green   - clocks
[copy]
    input = 0.4
    output = _GREEN

# 0.6 yellow  - gates, arpeggiator stuff
[copy]
    input = 0.6
    output = _YELLOW

# 0.73 orange - envelopes
[copy]
    input = 0.73
    output = _ORANGE

# 0.8 red     - reset
[copy]
    input = 0.8
    output = _RED

# 1.0 magenta - pitch
[copy]
    input = 1
    output = _MAGENTA

# 1.1 violet  - ribbon pitch
[copy]
    input = 1.1
    output = _VIOLET

# 1.2 blue    - fold and lucky stuff
[copy]
    input = 1.2
    output = _BLUE

# -------------------------------------------------
# Layer Switching Voltage from Pot P1.2, used in pot and button circuits
# LEDs R5..8 are switched on to display the Active Layer (Layers 0..3/A..D)
# -------------------------------------------------

[pot]
    pot = P1.2
    ledgauge = _THIS_IS
    discrete = 4
    output = _LAYER

# pulse with 3 hz to be used on LAYER LEDs
[lfo]
    hz = 2
    pulsewidth = 0.9
    square = _PATCHLFO

[compare]
    input = _LAYER
    compare = 0
    ifequal = _THIS_IS
    precision = 0.45
    output = _IS_A

[copy]
    input = _IS_A * _PATCHLFO
    output = R5

[compare]
    input = _LAYER
    compare = 1
    ifequal = _THIS_IS
    precision = 0.45
    output = _IS_B

[copy]
    input = _IS_B * _PATCHLFO
    output = R6

[compare]
    input = _LAYER
    compare = 2
    ifequal = _THIS_IS
    precision = 0.45
    output = _IS_C

[copy]
    input = _IS_C * _PATCHLFO
    output = R7

[compare]
    input = _LAYER
    compare = 3
    ifequal = _THIS_IS
    precision = 0.45
    output = _IS_D

[copy]
    input = _IS_D * _PATCHLFO
    output = R8

# a burst (1 to 4 counts) in red when SAVEing Preset
[burst]
    trigger = _SAVEPRESETS
    hz = 4
    count = _SEL_PRESET + 1
    output = _SAVEBURST

# a burst (1 to 4 counts) in green when LOADing Preset
[burst]
    trigger = _LOADPRESETS
    hz = 4
    count = _SEL_PRESET + 1
    output = _LOADBURST

# burst goes to R49 (X7 MODE LED)
[mixer]
    input1 = _SAVEBURST * _RED
    input2 = _LOADBURST * _GREEN
    output = R49

# -------------------------------------------------
# MASTER CLK green, CLK 2 (Div/Mult) yellow, RESET red
# -------------------------------------------------

[pot]
    pot = P1.1
    ledgauge = _GREEN
    startvalue = 0.3
    output = _CLK_POT

# MASTER CLOCK
[lfo]
    hz = _CLK_POT * 8
    pulsewidth = 0.3
    square = _MASTER_CLK

# normalized to (unpatched) input I1
[copy]
    input = _MASTER_CLK
    output = N1

# displayed in green
[copy]
    input = I1 * _GREEN
    output = R1

# CLOCK ON (aka RUN) on B1.1
[button]
    button = B1.1
    led = L1.1
    output = _CLOCK_ON

# with CLOCK ON (aka RUN) we get _RUN_CLOCK
[copy]
    input = I1 * _CLOCK_ON
    output = _RUN_CLOCK

# copied to output G9
[copy]
    input = _RUN_CLOCK
    output = G9

[copy]
    input = G9 * _GREEN
    output = R53

# normalized to input N4
[copy]
    input = _RUN_CLOCK
    output = N4

# Clock multiplier/divider
[pot]
    pot = P4.1
    discrete = 4
    select = _LAYER
    selectat = 0
    ledgauge = _YELLOW
    startvalue = 2
    output = _CLOCK_MULT

[pot]
    pot = P4.2
    discrete = 7
    select = _LAYER
    selectat = 0
    ledgauge = _YELLOW
    startvalue = 1
    output = _CLOCK_DIV

[clocktool]
    clock = _RUN_CLOCK
    output = G10
    dutycycle = 20%
    multiply = _CLOCK_MULT + 1
    divide = _CLOCK_DIV + 1

[copy]
    input = G10 * _YELLOW
    output = R54

# RESET as momentary button
[button]
    button = B1.2
    led = L1.2
    select = _LAYER
    selectat = 0
    states = 1
    output = _RESET

# RESET on button B1.2, normalized to I2, display red on R2
[copy]
    input = _RESET
    output = N2

[copy]
    input = _RESET * _RED
    output = R2

# -------------------------------------------------
# POTS/BUTTONS/ENCODERS of Controller 1 - p2b8
# -------------------------------------------------

# POTS and BUTTONS of the controllers use up to 5 layers (except P1.1 for CLK, P1.2 for LAYER, B1.1 for RUN)
# Layer A (selectat 0) for Encoquencer 1, Envelope 1, Select 1
# Layer B (selectat 1) for Encoquencer 2, Envelope 2, Select 2
# Layer C (selectat 2) for Encoquencer 3, Envelope 3, Select 3
# Layer D (selectat 3) for Modes, Arpeggiator stuff
#
# PITCH/DEGREE Change immediately or at start of seq
# [button]
#   button = B1.2
#   led = L1.2
#   select = _LAYER
#   selectat = 1
#   output = _LOCK_BAR

# Deactivate unused button(s)
[buttongroup]
    button1 = B1.2
    led1 = L1.2
    select = _LAYER
    selectat = 1

# Save/LOad Preset
[button]
    button = B1.2
    led = L1.2
    select = _LAYER
    selectat = 2
    states = 1
    shortpress = _LOADPRESETS
    longpress = _SAVEPRESETS

# Chord Activate (off,EQ1,EQ2,EQ3)
[button]
    button = B1.2
    led = L1.2
    select = _LAYER
    selectat = 3
    states = 4
    startvalue = 0
    output = _CHORD_ACTIVE

# Encoquencer Compose Mode
[button]
    button = B1.3
    led = L1.3
    select = _LAYER
    selectat = 0
    output = _EQ1_COMPOSE

[button]
    button = B1.3
    led = L1.3
    select = _LAYER
    selectat = 1
    output = _EQ2_COMPOSE

[button]
    button = B1.3
    led = L1.3
    select = _LAYER
    selectat = 2
    output = _EQ3_COMPOSE

# Encoquencer Copy/Paste current page
[button]
    button = B1.4
    led = L1.4
    select = _LAYER
    selectat = 0
    states = 1
    shortpress = _EQ1_COPY
    longpress = _EQ1_PASTE

[button]
    button = B1.4
    led = L1.4
    select = _LAYER
    selectat = 1
    states = 1
    shortpress = _EQ2_COPY
    longpress = _EQ2_PASTE

[button]
    button = B1.4
    led = L1.4
    select = _LAYER
    selectat = 2
    states = 1
    shortpress = _EQ3_COPY
    longpress = _EQ3_PASTE

# Encoquencer Fadermode 0..7
# 0 : pitch / CV
# 1 : randomize CV
# 2 : gate propability
# 3 : repeats (up to 16)
# 4 : gate pattern
# 5 : ratchets (up to 8)
# 6 : gate
# 7 : skip
[buttongroup]
    button1 = B1.5
    led1 = L1.5
    button2 = B1.6
    led2 = L1.6
    button3 = B1.7
    led3 = L1.7
    value1 = 1
    value2 = 2
    value3 = 4
    minactive = 0
    maxactive = 3
    select = _LAYER
    selectat = 0
    output = _EQ1_FADERMODE

[buttongroup]
    button1 = B1.5
    led1 = L1.5
    button2 = B1.6
    led2 = L1.6
    button3 = B1.7
    led3 = L1.7
    value1 = 1
    value2 = 2
    value3 = 4
    minactive = 0
    maxactive = 3
    select = _LAYER
    selectat = 1
    output = _EQ2_FADERMODE

[buttongroup]
    button1 = B1.5
    led1 = L1.5
    button2 = B1.6
    led2 = L1.6
    button3 = B1.7
    led3 = L1.7
    value1 = 1
    value2 = 2
    value3 = 4
    minactive = 0
    maxactive = 3
    select = _LAYER
    selectat = 2
    output = _EQ3_FADERMODE

# Encoquencer Buttonmode 0..3
# 0 : gates
# 1 : start / end
# 2 : gate pattern
# 3 : skip
[button]
    button = B1.8
    led = L1.8
    select = _LAYER
    selectat = 0
    states = 3
    output = _EQ1_BUTTONMODE

[button]
    button = B1.8
    led = L1.8
    select = _LAYER
    selectat = 1
    states = 3
    output = _EQ2_BUTTONMODE

[button]
    button = B1.8
    led = L1.8
    select = _LAYER
    selectat = 2
    states = 3
    output = _EQ3_BUTTONMODE

# Scales/Mmodes 0..9 NOTE: may not need 10 and 11 ever
# MAJOR: 0 = lydian, 1 = ionian, 2 = mixolydian, 3 = sus, 4 = altered
# MINOR: 6 = dorian, 7 = natural, 8 = harmonic, 9 = phrygian
# OTHER: 5 = harm.minor from 5th, 10 = diminished, 11 = augmented scale
[buttongroup]
    button1 = B1.3
    led1 = L1.3
    button2 = B1.4
    led2 = L1.4
    button3 = B1.5
    led3 = L1.5
    button4 = B1.6
    led4 = L1.6
    button5 = B1.7
    led5 = L1.7
    button6 = B1.8
    led6 = L1.8
    button7 = B3.1
    led7 = L3.1
    button8 = B3.2
    led8 = L3.2
    button9 = B3.3
    led9 = L3.3
    button10 = B3.4
    led10 = L3.4
    minactive = 0
    maxactive = 1
    select = _LAYER
    selectat = 3
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _DEGREE

# -------------------------------------------------
# POTS/BUTTONS/ENCODERS of Controller 2 - p10
# -------------------------------------------------

# ROOT
[pot]
    pot = P2.1
    ledgauge = _YELLOW
    discrete = 13
    select = _LAYER
    selectat = 0
    startvalue = 0
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _ROOT
#   output = _P_PITCH_POT

# switch to tuning mode
[pot]
    pot = P2.1
    ledgauge = _RED
    discrete = 2
    startvalue = 0
    select = _LAYER
    selectat = 1
    output = _TUNMODE

# set preset number
[pot]
    pot = P2.1
    ledgauge = _VIOLET
    discrete = 4
    select = _LAYER
    selectat = 2
    output = _SEL_PRESET

# FOLD CV
[pot]
    pot = P2.1
    ledgauge = _BLUE
    select = _LAYER
    selectat = 3
    output = _FOLDCVPOT

# SLEW TIME (violet)
[pot]
    pot = P2.2
    ledgauge = _VIOLET
    select = _LAYER
    selectat = 0
    startvalue = 0
    output = _EQ1_SLEWPOT

[pot]
    pot = P2.2
    ledgauge = _VIOLET
    select = _LAYER
    selectat = 1
    startvalue = 0
    output = _EQ2_SLEWPOT

[pot]
    pot = P2.2
    ledgauge = _VIOLET
    select = _LAYER
    selectat = 2
    startvalue = 0
    output = _EQ3_SLEWPOT

# FOLD BY
[pot]
    pot = P2.2
    ledgauge = _BLUE
    select = _LAYER
    selectat = 3
    output = _FOLDBYPOT

# Envelope Attack
[pot]
    pot = P2.3
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 0
    output = _E1_ATK

[pot]
    pot = P2.3
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 1
    output = _E2_ATK

[pot]
    pot = P2.3
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 2
    output = _E3_ATK

# ARP Startnote
[pot]
    pot = P2.3
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 3
    discrete = 8
    output = _ARP_STARTNOTE

# Envelope Level
[pot]
    pot = P2.4
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 0
    startvalue = 1
    output = _E1_LVL

[pot]
    pot = P2.4
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 1
    startvalue = 1
    output = _E2_LVL

[pot]
    pot = P2.4
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 2
    startvalue = 1
    output = _E3_LVL

# Envelope Decay
[pot]
    pot = P2.5
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 0
    output = _E1_DEC

[pot]
    pot = P2.5
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 1
    output = _E2_DEC

[pot]
    pot = P2.5
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 2
    output = _E3_DEC

# Envelope Shape
[pot]
    pot = P2.6
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 0
    startvalue = 0.5
    output = _E1_SHP

[pot]
    pot = P2.6
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 1
    startvalue = 0.5
    output = _E2_SHP

[pot]
    pot = P2.6
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 2
    startvalue = 0.5
    output = _E3_SHP

# Envelope Sustain
[pot]
    pot = P2.7
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 0
    output = _E1_SUS

[pot]
    pot = P2.7
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 1
    output = _E2_SUS

[pot]
    pot = P2.7
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 2
    output = _E3_SUS

# Gate Length of chord circuit
[pot]
    pot = P2.7
    ledgauge = _VIOLET
    select = _LAYER
    selectat = 3
    output = _CHORD_GL

# Encoquencer Slew (Off/Up/Dn/UpDn)
[pot]
    pot = P2.8
    ledgauge = _CYAN
    select = _LAYER
    selectat = 0
    discrete = 4
    startvalue = 0
    output = _EQ1_SLEW

[compare]
    input = _EQ1_SLEW
    compare = 1
    ifequal = 1
    else = 0
    output = _EQ1_SLEWUP1

[compare]
    input = _EQ1_SLEW
    compare = 3
    ifequal = 1
    else = 0
    output = _EQ1_SLEWUP2

[copy]
    input = _EQ1_SLEWUP1 + _EQ1_SLEWUP2
    output = _EQ1_SLEWUPBUT

[compare]
    input = _EQ1_SLEW
    compare = 2
    ifless = 0
    else = 1
    output = _EQ1_SLEWDNBUT

[pot]
    pot = P2.8
    ledgauge = _CYAN
    select = _LAYER
    selectat = 1
    discrete = 4
    startvalue = 0
    output = _EQ2_SLEW

[compare]
    input = _EQ2_SLEW
    compare = 1
    ifequal = 1
    else = 0
    output = _EQ2_SLEWUP1

[compare]
    input = _EQ2_SLEW
    compare = 3
    ifequal = 1
    else = 0
    output = _EQ2_SLEWUP2

[copy]
    input = _EQ2_SLEWUP1 + _EQ2_SLEWUP2
    output = _EQ2_SLEWUPBUT

[compare]
    input = _EQ2_SLEW
    compare = 2
    ifless = 0
    else = 1
    output = _EQ2_SLEWDNBUT

[pot]
    pot = P2.8
    ledgauge = _CYAN
    select = _LAYER
    selectat = 2
    discrete = 4
    startvalue = 0
    output = _EQ3_SLEW

[compare]
    input = _EQ3_SLEW
    compare = 1
    ifequal = 1
    else = 0
    output = _EQ3_SLEWUP1

[compare]
    input = _EQ3_SLEW
    compare = 3
    ifequal = 1
    else = 0
    output = _EQ3_SLEWUP2

[copy]
    input = _EQ3_SLEWUP1 + _EQ3_SLEWUP2
    output = _EQ3_SLEWUPBUT

[compare]
    input = _EQ3_SLEW
    compare = 2
    ifless = 0
    else = 1
    output = _EQ3_SLEWDNBUT

# Chord Spread 1-3 Octaves
[pot]
    pot = P2.8
    ledgauge = _VIOLET
    select = _LAYER
    selectat = 3
    discrete = 3
    startvalue = 0
    output = _CHORD_SPREAD

# Envelope Release
[pot]
    pot = P2.9
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 0
    output = _E1_REL

[pot]
    pot = P2.9
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 1
    output = _E2_REL

[pot]
    pot = P2.9
    ledgauge = _ORANGE
    select = _LAYER
    selectat = 2
    output = _E3_REL

# CHORD Pitch (lowest note)
[pot]
    pot = P2.9
    discrete = 5
    startvalue = 2
    ledgauge = _VIOLET
    select = _LAYER
    selectat = 3
    output = _CHORD_PITCHPOT

# Encoquencer Base Pitch
[pot]
    pot = P2.10
    ledgauge = _CYAN
    select = _LAYER
    selectat = 0
    outputscale = 0.3
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ1_CVBASE

[pot]
    pot = P2.10
    ledgauge = _CYAN
    select = _LAYER
    selectat = 1
    outputscale = 0.3
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ2_CVBASE

[pot]
    pot = P2.10
    ledgauge = _CYAN
    select = _LAYER
    selectat = 2
    outputscale = 0.3
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ3_CVBASE

# CHORD Inversion
[pot]
    pot = P2.10
    ledgauge = _VIOLET
    select = _LAYER
    selectat = 3
    discrete = 5
    startvalue = 0
    output = _CHORD_INV

# -------------------------------------------------
# POTS/BUTTONS/ENCODERS of Controller 3 - p2b8
# -------------------------------------------------

# Shift up to 8 steps
[pot]
    pot = P3.1
    ledgauge = _CYAN
    discrete = 9
    select = _LAYER
    selectat = 0
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ1_SHIFTSTEPS

[pot]
    pot = P3.1
    ledgauge = _CYAN
    discrete = 9
    startvalue = 0
    select = _LAYER
    selectat = 1
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ2_SHIFTSTEPS

[pot]
    pot = P3.1
    ledgauge = _CYAN
    discrete = 9
    startvalue = 0
    select = _LAYER
    selectat = 2
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ3_SHIFTSTEPS

[pot]
    pot = P3.1
    ledgauge = _BLUE
    startvalue = 0
    select = _LAYER
    selectat = 3
    output = _FOLDMAXPOT

# HEY! TAKE A CHANCE
[pot]
    pot = P3.2
    ledgauge = _BLUE
    startvalue = 0
    select = _LAYER
    selectat = 0
    output = _EQ1_LUCKY_CHANCE

[pot]
    pot = P3.2
    ledgauge = _BLUE
    startvalue = 0
    select = _LAYER
    selectat = 1
    output = _EQ2_LUCKY_CHANCE

[pot]
    pot = P3.2
    ledgauge = _BLUE
    startvalue = 0
    select = _LAYER
    selectat = 2
    output = _EQ3_LUCKY_CHANCE

[pot]
    pot = P3.2
    ledgauge = _BLUE
    startvalue = 0
    select = _LAYER
    selectat = 3
    output = _FOLDMINPOT

# Select1 - root
[button]
    button = B3.1
    led = L3.1
    select = _LAYER
    selectat = 0
    output = _EQ1_SEL_1

[button]
    button = B3.1
    led = L3.1
    select = _LAYER
    selectat = 1
    output = _EQ2_SEL_1

[button]
    button = B3.1
    led = L3.1
    select = _LAYER
    selectat = 2
    output = _EQ3_SEL_1

# Select3 - 3rd
[button]
    button = B3.2
    led = L3.2
    select = _LAYER
    selectat = 0
    output = _EQ1_SEL_3

[button]
    button = B3.2
    led = L3.2
    select = _LAYER
    selectat = 1
    output = _EQ2_SEL_3

[button]
    button = B3.2
    led = L3.2
    select = _LAYER
    selectat = 2
    output = _EQ3_SEL_3

# Select5 - 5th
[button]
    button = B3.3
    led = L3.3
    select = _LAYER
    selectat = 0
    output = _EQ1_SEL_5

[button]
    button = B3.3
    led = L3.3
    select = _LAYER
    selectat = 1
    output = _EQ2_SEL_5

[button]
    button = B3.3
    led = L3.3
    select = _LAYER
    selectat = 2
    output = _EQ3_SEL_5

# Select7 - 7th
[button]
    button = B3.4
    led = L3.4
    select = _LAYER
    selectat = 0
    output = _EQ1_SEL_7

[button]
    button = B3.4
    led = L3.4
    select = _LAYER
    selectat = 1
    output = _EQ2_SEL_7

[button]
    button = B3.4
    led = L3.4
    select = _LAYER
    selectat = 2
    output = _EQ3_SEL_7

# Select9 - 9th
[button]
    button = B3.5
    led = L3.5
    select = _LAYER
    selectat = 0
    output = _EQ1_SEL_9

[button]
    button = B3.5
    led = L3.5
    select = _LAYER
    selectat = 1
    output = _EQ2_SEL_9

[button]
    button = B3.5
    led = L3.5
    select = _LAYER
    selectat = 2
    output = _EQ3_SEL_9

# Envelope Retrigs
[button]
    button = B3.5
    led = L3.5
    select = _LAYER
    selectat = 3
    output = _ENV_RETRIG

# Select11 - 11th (or 4th)
[button]
    button = B3.6
    led = L3.6
    select = _LAYER
    selectat = 0
    output = _EQ1_SEL_11

[button]
    button = B3.6
    led = L3.6
    select = _LAYER
    selectat = 1
    output = _EQ2_SEL_11

[button]
    button = B3.6
    led = L3.6
    select = _LAYER
    selectat = 2
    output = _EQ3_SEL_11

# override select_ intervals for Ribbon
[button]
    button = B3.6
    led = L3.6
    select = _LAYER
    selectat = 3
    output = _RIBN_SCALE

# Select13 - 13th (or 6th)
[button]
    button = B3.7
    led = L3.7
    select = _LAYER
    selectat = 0
    output = _EQ1_SEL_13

[button]
    button = B3.7
    led = L3.7
    select = _LAYER
    selectat = 1
    output = _EQ2_SEL_13

[button]
    button = B3.7
    led = L3.7
    select = _LAYER
    selectat = 2
    output = _EQ3_SEL_13

# RIBN quantization off
[button]
    button = B3.7
    led = L3.7
    select = _LAYER
    selectat = 3
    output = _RIBN_QUANT_OFF

# Selectfills - those not in the scale
[button]
    button = B3.8
    led = L3.8
    select = _LAYER
    selectat = 0
    output = _EQ1_SELFILLS

[button]
    button = B3.8
    led = L3.8
    select = _LAYER
    selectat = 1
    output = _EQ2_SELFILLS

[button]
    button = B3.8
    led = L3.8
    select = _LAYER
    selectat = 2
    output = _EQ3_SELFILLS

# add select_fill_ intervals for Ribbon
[button]
    button = B3.8
    led = L3.8
    select = _LAYER
    selectat = 3
    output = _RIBN_FILLS

# -------------------------------------------------
# POTS/BUTTONS/ENCODERS of Controller 4 - p2b8
# -------------------------------------------------

# CLK2 MULT/DIV on Layer A are in CLK Section
# Clock multiplier/divider for EQ2
[pot]
    pot = P4.1
    discrete = 5
    select = _LAYER
    selectat = 1
    ledgauge = _GREEN
    startvalue = 0
    output = _EQ2_CLK_MULT

[pot]
    pot = P4.2
    discrete = 7
    select = _LAYER
    selectat = 1
    ledgauge = _GREEN
    startvalue = 0
    output = _EQ2_CLK_DIV

[clocktool]
    clock = _RUN_CLOCK
    output = _EQ2_CLOCK
    dutycycle = 20%
    multiply = _EQ2_CLK_MULT + 1
    divide = _EQ2_CLK_DIV + 1

# Clock multiplier/divider for EQ3
[pot]
    pot = P4.1
    discrete = 5
    select = _LAYER
    selectat = 2
    ledgauge = _GREEN
    startvalue = 0
    output = _EQ3_CLK_MULT

[pot]
    pot = P4.2
    discrete = 7
    select = _LAYER
    selectat = 2
    ledgauge = _GREEN
    startvalue = 0
    output = _EQ3_CLK_DIV

[clocktool]
    clock = _RUN_CLOCK
    output = _EQ3_CLOCK
    dutycycle = 20%
    multiply = _EQ3_CLK_MULT + 1
    divide = _EQ3_CLK_DIV + 1

# FOLD Range
[pot]
    pot = P4.1
    discrete = 8
    ledgauge = _BLUE
    select = _LAYER
    selectat = 3
    startvalue = 0
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _FOLDRANGEPOT

# ARP Pattern
[pot]
    pot = P4.2
    discrete = 7
    select = _LAYER
    selectat = 3
    ledgauge = _ORANGE
    startvalue = 0
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _ARP_PATTERN

# Encoquencer Pages (4 for 4x8 Steps)
[button]
    button = B4.1
    led = L4.1
    states = 4
    select = _LAYER
    selectat = 0
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ1_PAGE

[button]
    button = B4.1
    led = L4.1
    states = 4
    select = _LAYER
    selectat = 1
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ2_PAGE

[button]
    button = B4.1
    led = L4.1
    states = 4
    select = _LAYER
    selectat = 2
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ3_PAGE

# RUN EQ1 or ARP clocked by _RUN_CLK or _EQ1_GATE
[button]
    button = B4.1
    led = L4.1
    select = _LAYER
    selectat = 3
    states = 3
    output = _EQ1_OR_ARP

# Encoquencer Quantization (0: off, 1: diatonic, 2: to scale)
[button]
    button = B4.2
    led = L4.2
    select = _LAYER
    selectat = 0
    states = 3
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ1_QUANTIZE

[button]
    button = B4.2
    led = L4.2
    select = _LAYER
    selectat = 1
    states = 3
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ2_QUANTIZE

[button]
    button = B4.2
    led = L4.2
    select = _LAYER
    selectat = 2
    states = 3
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ3_QUANTIZE

# Arpeggio Drops, off/x./xx./x.. = 0/1/2/3
[button]
    button = B4.2
    led = L4.2
    select = _LAYER
    selectat = 3
    value1 = 0
    value2 = 1
    value3 = 2
    value4 = 3
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _ARP_DROP

# Encoquencer Mute
[button]
    button = B4.3
    led = L4.3
    select = _LAYER
    selectat = 0
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ1_MUTE

[button]
    button = B4.3
    led = L4.3
    select = _LAYER
    selectat = 1
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ2_MUTE

[button]
    button = B4.3
    led = L4.3
    select = _LAYER
    selectat = 2
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ3_MUTE

# ARP Position: Transposition Octave (0..3) with 4-state button
[button]
    button = B4.3
    led = L4.3
    select = _LAYER
    selectat = 3
    value1 = 0
    value2 = 1V
    value3 = 2V
    value4 = 3V
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _ARP_TRANSPOSE

# Encoquencer RUN
[button]
    button = B4.4
    led = L4.4
    select = _LAYER
    selectat = 0
    states = 1
    output = _EQ1_RUN1

[button]
    button = B4.4
    led = L4.4
    select = _LAYER
    selectat = 1
    states = 1
    output = _EQ2_RUN1

[button]
    button = B4.4
    led = L4.4
    select = _LAYER
    selectat = 2
    states = 1
    output = _EQ3_RUN1

# ARP Butterfly
[button]
    button = B4.4
    led = L4.4
    select = _LAYER
    selectat = 3
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _ARP_BUTTERFLY

# Encoquencer Nudge Up/Down
[nudge]
    buttonup = B4.6
    buttondown = B4.5
    ledup = L4.6
    leddown = L4.5
    select = _LAYER
    selectat = 0
    minimum = -1V
    maximum = 1V
    amount = 1V / 12
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ1_NUDGE

[nudge]
    buttonup = B4.6
    buttondown = B4.5
    ledup = L4.6
    leddown = L4.5
    select = _LAYER
    selectat = 1
    minimum = -1V
    maximum = 1V
    amount = 1V / 12
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ2_NUDGE

[nudge]
    buttonup = B4.6
    buttondown = B4.5
    ledup = L4.6
    leddown = L4.5
    select = _LAYER
    selectat = 2
    minimum = -1V
    maximum = 1V
    amount = 1V / 12
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ3_NUDGE

# ARP 1..4 Octaves Range with 4-state button
[button]
    button = B4.5
    led = L4.5
    select = _LAYER
    selectat = 3
    value1 = 1V
    value2 = 2V
    value3 = 3V
    value4 = 4V
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _ARP_RANGE

# Add ARPeggio octaves, off/up/down = 0/1/2
[button]
    button = B4.6
    led = L4.6
    select = _LAYER
    selectat = 3
    value1 = 0
    value2 = 1
    value3 = 2
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _ARP_OCTAVES

# Encoquencer Recording
[button]
    button = B4.7
    led = L4.7
    select = _LAYER
    selectat = 0
    states = 1
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ1_RECORD

[button]
    button = B4.7
    led = L4.7
    select = _LAYER
    selectat = 1
    states = 1
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ2_RECORD

[button]
    button = B4.7
    led = L4.7
    select = _LAYER
    selectat = 2
    states = 1
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ3_RECORD

# Arpeggiator Direction
[button]
    button = B4.7
    led = L4.7
    select = _LAYER
    selectat = 3
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _ARP_DIRECTION

# Encoquencer Pingpong
[button]
    button = B4.8
    led = L4.8
    select = _LAYER
    selectat = 0
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ1_PINGPONG

[button]
    button = B4.8
    led = L4.8
    select = _LAYER
    selectat = 1
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ2_PINGPONG

[button]
    button = B4.8
    led = L4.8
    select = _LAYER
    selectat = 2
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _EQ3_PINGPONG

# Arpeggiator Pingpong
[button]
    button = B4.8
    led = L4.8
    select = _LAYER
    selectat = 3
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    output = _ARP_PINGPONG

# -------------------------------------------------
# ENCODERS of Controller 5 - e4
# -------------------------------------------------

# Layers A..C are used for Encoquencers EQ1..3 Steps
# Use button to reset single Encoquencer, override encoder to show current step(s)
[button]
    button = B5.1
    select = _LAYER
    selectat = 3
    states = 1
    output = _EQ1_RESET

[encoder]
    encoder = E5.1
    led = _EQ1_RESET * 0.5
    select = _LAYER
    selectat = 3
    discrete = 32
    override = _EQ1_CURRENTSTEP
    color = _YELLOW

[button]
    button = B5.2
    select = _LAYER
    selectat = 3
    states = 1
    output = _EQ2_RESET

[encoder]
    encoder = E5.2
    led = _EQ2_RESET * 0.5
    select = _LAYER
    selectat = 3
    discrete = 32
    override = _EQ2_CURRENTSTEP
    color = _ORANGE

[button]
    button = B5.3
    select = _LAYER
    selectat = 3
    states = 1
    output = _EQ3_RESET

[encoder]
    encoder = E5.3
    led = _EQ3_RESET * 0.5
    select = _LAYER
    selectat = 3
    discrete = 32
    override = _EQ3_CURRENTSTEP
    color = _CYAN

# How much Lucky Chance?
[encoder]
    encoder = E5.4
    select = _LAYER
    selectat = 3
    color = _BLUE
    output = _LUCKY_AMOUNT

# -------------------------------------------------
# ENCODERS of Controller 6 - e4
# -------------------------------------------------

# Layers A..C are used for Encoquencers EQ1..3 Steps
# Button to toggle Encoquencer RUN state, encoder to set last step = length
[button]
    button = B6.1
    select = _LAYER
    selectat = 3
    states = 1
    output = _EQ1_RUN2

# Encoquencer Length = Endstep
[encoder]
    encoder = E6.1
    led = _EQ1_RUN2 * 0.5
    select = _LAYER
    selectat = 3
    discrete = 32
    startvalue = 31
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    color = _YELLOW
    ledfill = 1
    output = _EQ1_LENGTH

[button]
    button = B6.2
    select = _LAYER
    selectat = 3
    states = 1
    output = _EQ2_RUN2

[encoder]
    encoder = E6.2
    led = _EQ2_RUN2 * 0.5
    select = _LAYER
    selectat = 3
    discrete = 32
    startvalue = 31
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    color = _ORANGE
    ledfill = 1
    output = _EQ2_LENGTH

[button]
    button = B6.3
    select = _LAYER
    selectat = 3
    states = 1
    output = _EQ3_RUN2

[encoder]
    encoder = E6.3
    led = _EQ3_RUN2 * 0.5
    select = _LAYER
    selectat = 3
    discrete = 32
    startvalue = 31
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    color = _CYAN
    ledfill = 1
    output = _EQ3_LENGTH

# What kind of Lucky? 4 possible actions: lucky cvs, cvdrift, gates, shuffle
[encoder]
    encoder = E6.4
    select = _LAYER
    selectat = 3
    discrete = 5
    color = _BLUE
    output = _LUCKY_ACTS

# If lucky, do it at EQ1 Start of Sequence
[compare]
    input = _LUCKY_ACTS
    compare = 1
    ifequal = 1
    output = _LUCKY_CVS

[compare]
    input = _LUCKY_ACTS
    compare = 2
    ifequal = 1
    output = _LUCKY_CVDRIFT

[compare]
    input = _LUCKY_ACTS
    compare = 3
    ifequal = 1
    output = _LUCKY_GATES

[compare]
    input = _LUCKY_ACTS
    compare = 4
    ifequal = 1
    output = _LUCKY_SHUFFLE

# -------------------------------------------------
# ARPeggiator: clock is _ARP_CLK (MASTER CLK or EQ1 GATE), Pitch is output at O1, Envelope at O2
# -------------------------------------------------

# ARP is reset with _RESET
[arpeggio]
    clock = I3
    reset = _RESET
    range = _ARP_RANGE
    pattern = _ARP_PATTERN
    degree = _DEGREE
    startnote = _ARP_STARTNOTE
    root = _ROOT
    transpose = _ARP_TRANSPOSE
    butterfly = _ARP_BUTTERFLY
    pingpong = _ARP_PINGPONG
    direction = _ARP_DIRECTION
    octaves = _ARP_OCTAVES
    drop = _ARP_DROP
    select1 = _EQ1_SEL_1
    select3 = _EQ1_SEL_3
    select5 = _EQ1_SEL_5
    select7 = _EQ1_SEL_7
    select9 = _EQ1_SEL_9
    select11 = _EQ1_SEL_11
    select13 = _EQ1_SEL_13
    selectfill1 = _EQ1_SELFILLS
    selectfill2 = _EQ1_SELFILLS
    selectfill3 = _EQ1_SELFILLS
    selectfill4 = _EQ1_SELFILLS
    selectfill5 = _EQ1_SELFILLS
    tuningpitch = _TUNPITCH
    tuningmode = _TUNMODE
    output = _ARPEGGIO_PITCH

# -------------------------------------------------
# Encoquencer EQ1 PITCH to O1, ENV to O2
# check Layer 0,1,2 to enable Keyboardmode and Recording in Encoquencers
# -------------------------------------------------

[midiin]
    pitch1 = _KEYB_PITCH
    gate1 = _KEYB_GATE

[compare]
    input = _LAYER
    compare = 0
    ifequal = 1
    else = 0
    precision = 0.45
    output = _EQ1_ACTIVE

[flipflop]
    toggle = _EQ1_RUN1 + _EQ1_RUN2
    output = _EQ1_RUN

[encoquencer]
    clock = I4 # where we normalized _RUN_CLK or input a different CLK
    reset = _EQ1_RESET + _RESET
    clearskips = _EQ1_RESET + _RESET
    clearrepeats = _EQ1_RESET + _RESET
    clearstartend = _EQ1_RESET + _RESET
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    select = _LAYER
    selectat = 0
#   ledpreview = 1
    numsteps = 32 # 4 pages of 8 steps!
    page = _EQ1_PAGE # 0 or 1
    run = _EQ1_RUN
    mute = _EQ1_MUTE
    root = _ROOT
    degree = _DEGREE
    select1 = _EQ1_SEL_1
    select3 = _EQ1_SEL_3
    select5 = _EQ1_SEL_5
    select7 = _EQ1_SEL_7
    select9 = _EQ1_SEL_9
    select11 = _EQ1_SEL_11
    select13 = _EQ1_SEL_13
    selectfill1 = _EQ1_SELFILLS
    selectfill2 = _EQ1_SELFILLS
    selectfill3 = _EQ1_SELFILLS
    selectfill4 = _EQ1_SELFILLS
    selectfill5 = _EQ1_SELFILLS
    cvbase = _EQ1_CVBASE
#   cvrange = _EQ1_CVRANGE
    quantize = _EQ1_QUANTIZE
    buttonmode = _EQ1_BUTTONMODE
    fadermode = _EQ1_FADERMODE
    endstep = _EQ1_LENGTH + 1
#   direction = _EQ1_DIRECTION
    pingpong = _EQ1_PINGPONG
#   pattern = _EQ1_PATTERN
    shiftsteps = _EQ1_SHIFTSTEPS # EQ1 not shifted
    composemode = _EQ1_COMPOSE
    luckychance = _EQ1_LUCKY_CHANCE
    luckyamount = _LUCKY_AMOUNT
    luckycvs = _LUCKY_CVS * _EQ1_STARTOFSEQ
    luckycvdrift = _LUCKY_CVDRIFT * _EQ1_STARTOFSEQ
    luckygates = _LUCKY_GATES * _EQ1_STARTOFSEQ
    luckyshuffle = _LUCKY_SHUFFLE * _EQ1_STARTOFSEQ
    tuningpitch = _TUNPITCH
    tuningmode = _TUNMODE
    keyboardmode = _EQ1_ACTIVE
    keyboardcv = _KEYB_PITCH
    keyboardgate = _KEYB_GATE
    recordmode = _EQ1_RECORD * _EQ1_ACTIVE
    recordsilence = 1
    copy = _EQ1_COPY
    paste = _EQ1_PASTE
    startofsequence = _EQ1_STARTOFSEQ
    currentstep = _EQ1_CURRENTSTEP
    gate = _EQ1_GATE
    cv = _EQ1_PITCH

# put EQ1 Start of Sequence to output G11
[copy]
    input = _EQ1_STARTOFSEQ
    output = G11

# and use cyan, green, orange on R55 for the display
[switch]
    input1 = G11 * _CYAN
    input2 = G11 * _GREEN
    input3 = G11 * _ORANGE
    output1 = R55
    offset = _EQ1_OR_ARP

# switch _ARP_CLK between EQ1_GATE (for EQ1), RUN_CLOCK or EQ1_GATE (for ARP)
[switch]
    input1 = _EQ1_GATE # EQ1 gate for EQ1
    input2 = _RUN_CLOCK # master clk for Arp
    input3 = _EQ1_GATE # EQ1 gate for Arp
    output1 = N3
    offset = _EQ1_OR_ARP

# and use cyan, green, orange on R3 for the selected clock
[switch]
    input1 = I3 * _CYAN
    input2 = I3 * _GREEN
    input3 = I3 * _ORANGE
    output1 = R3
    offset = _EQ1_OR_ARP

[contour]
    gate = I3
    retrigger = _ENV_RETRIG
    attack = _E1_ATK
    attackshape = _E1_SHP
    decay = _E1_DEC
    decayshape = _E1_SHP
    sustain = _E1_SUS
    level = _E1_LVL
    release = _E1_REL
    releaseshape = _E1_SHP
    output = O2

# switch between (orange or yellow) and red (for recording) on R10
[switch]
    input1 = O2 * _ORANGE
    input2 = _RED
    output1 = R10
    offset = _EQ1_RECORD

# when _EQ1_OR_ARP is 1, 2 or 3, _NOT_EQ is 1
[logic]
    input1 = _EQ1_OR_ARP
    or = _NOT_EQ1

# switch between ARP and AQ1
[switch]
    input1 = _EQ1_PITCH + _EQ1_NUDGE
    input2 = _ARPEGGIO_PITCH + _EQ1_NUDGE
    output1 = _EQ1_PITCH_OUT
    offset = _NOT_EQ1

# slew with pot and slewup/slewdown buttons
[slew]
    input = _EQ1_PITCH_OUT
    slewup = _EQ1_SLEWPOT * _EQ1_SLEWUPBUT
    slewdown = _EQ1_SLEWPOT * _EQ1_SLEWDNBUT
    exponential = O1

# switch between magenta and red (for recording) on R9
[switch]
    input1 = O1 * _MAGENTA
    input2 = _RED
    output1 = R9
    offset = _EQ1_RECORD

# switch between EQ1 (cyan) and ARP (yellow) on R4 (EQ1 CLK)
[switch]
    input1 = I4 * _CYAN # EQ1 is active
    input2 = I4 * _YELLOW # ARP is active
    output1 = R4
    offset = _NOT_EQ1

# -------------------------------------------------
# CHORD circuit output on TRS MIDI, if active tied to startofseq trigger of EQ1, EQ2 or EQ2
# -------------------------------------------------

# switch chord (off, EQ1, EQ2, EQ3)
[switch]
    input1 = 0
    input2 = _EQ1_STARTOFSEQ
    input3 = _EQ2_STARTOFSEQ
    input4 = _EQ3_STARTOFSEQ
    output1 = _CHORD_TRIGGER
    offset = _CHORD_ACTIVE

[switch]
    input1 = 0
    input2 = _EQ1_NUDGE
    input3 = _EQ2_NUDGE
    input4 = _EQ3_NUDGE
    output1 = _CHORD_NUDGE
    offset = _CHORD_ACTIVE

# base octave
[compare]
    input = _CHORD_PITCHPOT
    compare = 1
    ifequal = 1V
    precision = 0.45
    output = _CHP_1

[compare]
    input = _CHORD_PITCHPOT
    compare = 2
    ifequal = 2V
    precision = 0.45
    output = _CHP_2

[compare]
    input = _CHORD_PITCHPOT
    compare = 3
    ifequal = 3V
    precision = 0.45
    output = _CHP_3

[compare]
    input = _CHORD_PITCHPOT
    compare = 4
    ifequal = 4V
    precision = 0.45
    output = _CHP_4

[mixer]
    input1 = _CHP_1
    input2 = _CHP_2
    input3 = _CHP_3
    input4 = _CHP_4
    output = _CHORD_PITCH

[chord]
    select1 = _EQ1_SEL_1
    select3 = _EQ1_SEL_3
    select5 = _EQ1_SEL_5
    select7 = _EQ1_SEL_7
    select9 = _EQ1_SEL_9
    select11 = _EQ1_SEL_11
    select13 = _EQ1_SEL_13
    pitch = _CHORD_PITCH
    root = _ROOT
    degree = _DEGREE
    trigger = _CHORD_TRIGGER
    spread = _CHORD_SPREAD
    inversion = _CHORD_INV
    transpose = _CHORD_NUDGE
    tuningpitch = _TUNPITCH
    tuningmode = _TUNMODE
    output1 = _CHORD_NOTE_1
    output2 = _CHORD_NOTE_2
    output3 = _CHORD_NOTE_3
    output4 = _CHORD_NOTE_4

[random]
    minimum = 0.7 # minimum allowed velocity
    maximum = 1 # maximum allowed velocity
    output = _VELOCITY

[contour]
    trigger = _CHORD_TRIGGER
    hold = _CHORD_GL * 5 # 5s max gate length
    release = 0
    output = _CHORD_GATE

# output on default channel 1 and trs
[midiout]
    pitch1 = _CHORD_NOTE_1
    pitch2 = _CHORD_NOTE_2
    pitch3 = _CHORD_NOTE_3
    pitch4 = _CHORD_NOTE_4
    gate1 = _CHORD_GATE
    gate2 = _CHORD_GATE
    gate3 = _CHORD_GATE
    gate4 = _CHORD_GATE
    velocity1 = _VELOCITY
    velocity2 = _VELOCITY
    velocity3 = _VELOCITY
    velocity4 = _VELOCITY

# -------------------------------------------------
# Encoquencer EQ2 PITCH to O3, ENV to O4
# check Layer 0,1,2 to enable Keyboardmode and Recording in Encoquencers
# -------------------------------------------------

[compare]
    input = _LAYER
    compare = 1
    ifequal = 1
    else = 0
    precision = 0.45
    output = _EQ2_ACTIVE

[flipflop]
    toggle = _EQ2_RUN1 + _EQ2_RUN2
    output = _EQ2_RUN

[encoquencer]
    clock = _EQ2_CLOCK
    reset = _EQ2_RESET + _RESET
    clearskips = _EQ2_RESET + _RESET
    clearrepeats = _EQ2_RESET + _RESET
    clearstartend = _EQ2_RESET + _RESET
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    select = _LAYER
    selectat = 1
#   ledpreview = 1
    numsteps = 32 # 4 pages of 8 steps!
    page = _EQ2_PAGE # 0 or 1
    run = _EQ2_RUN
    mute = _EQ2_MUTE
    root = _ROOT
    degree = _DEGREE
    select1 = _EQ2_SEL_1
    select3 = _EQ2_SEL_3
    select5 = _EQ2_SEL_5
    select7 = _EQ2_SEL_7
    select9 = _EQ2_SEL_9
    select11 = _EQ2_SEL_11
    select13 = _EQ2_SEL_13
    selectfill1 = _EQ2_SELFILLS
    selectfill2 = _EQ2_SELFILLS
    selectfill3 = _EQ2_SELFILLS
    selectfill4 = _EQ2_SELFILLS
    selectfill5 = _EQ2_SELFILLS
    cvbase = _EQ2_CVBASE
#   cvrange = _EQ2_CVRANGE
    quantize = _EQ2_QUANTIZE
    buttonmode = _EQ2_BUTTONMODE
    fadermode = _EQ2_FADERMODE
    endstep = _EQ2_LENGTH + 1
#   direction = _EQ2_DIRECTION
    pingpong = _EQ2_PINGPONG
#   pattern = _EQ2_PATTERN
    shiftsteps = _EQ2_SHIFTSTEPS
    composemode = _EQ2_COMPOSE
    luckychance = _EQ2_LUCKY_CHANCE
    luckyamount = _LUCKY_AMOUNT
    luckycvs = _LUCKY_CVS * _EQ2_STARTOFSEQ
    luckycvdrift = _LUCKY_CVDRIFT * _EQ2_STARTOFSEQ
    luckygates = _LUCKY_GATES * _EQ2_STARTOFSEQ
    luckyshuffle = _LUCKY_SHUFFLE * _EQ2_STARTOFSEQ
    tuningpitch = _TUNPITCH
    tuningmode = _TUNMODE
    keyboardmode = _EQ2_ACTIVE
    keyboardcv = _KEYB_PITCH
    keyboardgate = _KEYB_GATE
    recordmode = _EQ2_RECORD * _EQ2_ACTIVE
    recordsilence = 1
    copy = _EQ2_COPY
    paste = _EQ2_PASTE
    startofsequence = _EQ2_STARTOFSEQ
    currentstep = _EQ2_CURRENTSTEP
    gate = _EQ2_GATE
    cv = _EQ2_PITCH

# slew with pot and slewup/slewdown buttons
[slew]
    input = _EQ2_PITCH + _EQ2_NUDGE
    slewup = _EQ2_SLEWPOT * _EQ2_SLEWUPBUT
    slewdown = _EQ2_SLEWPOT * _EQ2_SLEWDNBUT
    exponential = O3

# switch between magenta and red (for recording) on R11
[switch]
    input1 = O3 * _MAGENTA
    input2 = _RED
    output1 = R11
    offset = _EQ2_RECORD

[contour]
    gate = _EQ2_GATE
    retrigger = _ENV_RETRIG
    attack = _E2_ATK
    attackshape = _E2_SHP
    decay = _E2_DEC
    decayshape = _E2_SHP
    sustain = _E2_SUS
    level = _E2_LVL
    release = _E2_REL
    releaseshape = _E2_SHP
    output = O4

# switch between (orange or yellow) and red (for recording) on R12
[switch]
    input1 = O4 * _ORANGE
    input2 = _RED
    output1 = R12
    offset = _EQ2_RECORD

# -------------------------------------------------
# Encoquencer EQ3 PITCH to O5, ENV to O6
# check Layer 0,1,2 to enable Keyboardmode and Recording in Encoquencers
# -------------------------------------------------

[compare]
    input = _LAYER
    compare = 2
    ifequal = 1
    else = 0
    precision = 0.45
    output = _EQ3_ACTIVE

[flipflop]
    toggle = _EQ3_RUN1 + _EQ3_RUN2
    output = _EQ3_RUN

[encoquencer]
    clock = _EQ3_CLOCK
    reset = _EQ3_RESET + _RESET
    clearskips = _EQ3_RESET + _RESET
    clearrepeats = _EQ3_RESET + _RESET
    clearstartend = _EQ3_RESET + _RESET
    preset = _SEL_PRESET
    loadpreset = _LOADPRESETS
    savepreset = _SAVEPRESETS
    select = _LAYER
    selectat = 2
#   ledpreview = 1
    numsteps = 32 # 4 pages of 8 steps!
    page = _EQ3_PAGE # 0 or 1
    run = _EQ3_RUN
    mute = _EQ3_MUTE
    root = _ROOT
    degree = _DEGREE
    select1 = _EQ3_SEL_1
    select3 = _EQ3_SEL_3
    select5 = _EQ3_SEL_5
    select7 = _EQ3_SEL_7
    select9 = _EQ3_SEL_9
    select11 = _EQ3_SEL_11
    select13 = _EQ3_SEL_13
    selectfill1 = _EQ3_SELFILLS
    selectfill2 = _EQ3_SELFILLS
    selectfill3 = _EQ3_SELFILLS
    selectfill4 = _EQ3_SELFILLS
    selectfill5 = _EQ3_SELFILLS
    cvbase = _EQ3_CVBASE
#   cvrange = _EQ3_CVRANGE
    quantize = _EQ3_QUANTIZE
    buttonmode = _EQ3_BUTTONMODE
    fadermode = _EQ3_FADERMODE
    endstep = _EQ3_LENGTH + 1
#   direction = _EQ3_DIRECTION
    pingpong = _EQ3_PINGPONG
#   pattern = _EQ3_PATTERN
    shiftsteps = _EQ3_SHIFTSTEPS
    composemode = _EQ3_COMPOSE
    luckychance = _EQ3_LUCKY_CHANCE
    luckyamount = _LUCKY_AMOUNT
    luckycvs = _LUCKY_CVS * _EQ3_STARTOFSEQ
    luckycvdrift = _LUCKY_CVDRIFT * _EQ3_STARTOFSEQ
    luckygates = _LUCKY_GATES * _EQ3_STARTOFSEQ
    luckyshuffle = _LUCKY_SHUFFLE * _EQ3_STARTOFSEQ
    tuningpitch = _TUNPITCH
    tuningmode = _TUNMODE
    keyboardmode = _EQ3_ACTIVE
    keyboardcv = _KEYB_PITCH
    keyboardgate = _KEYB_GATE
    recordmode = _EQ3_RECORD * _EQ3_ACTIVE
    recordsilence = 1
    copy = _EQ3_COPY
    paste = _EQ3_PASTE
    startofsequence = _EQ3_STARTOFSEQ
    currentstep = _EQ3_CURRENTSTEP
    gate = _EQ3_GATE
    cv = _EQ3_PITCH

# slew with pot and slewup/slewdown buttons
[slew]
    input = _EQ3_PITCH + _EQ3_NUDGE
    slewup = _EQ3_SLEWPOT * _EQ3_SLEWUPBUT
    slewdown = _EQ3_SLEWPOT * _EQ3_SLEWDNBUT
    exponential = O5

# switch between magenta and red (for recording) on R11
[switch]
    input1 = O5 * _MAGENTA
    input2 = _RED
    output1 = R13
    offset = _EQ3_RECORD

[contour]
    gate = _EQ3_GATE
    retrigger = _ENV_RETRIG
    attack = _E3_ATK
    attackshape = _E3_SHP
    decay = _E3_DEC
    decayshape = _E3_SHP
    sustain = _E3_SUS
    level = _E3_LVL
    release = _E3_REL
    releaseshape = _E3_SHP
    output = O6

# switch between (orange or yellow) and red (for recording) on R12
[switch]
    input1 = O6 * _ORANGE
    input2 = _RED
    output1 = R14
    offset = _EQ3_RECORD

# -------------------------------------------------
# FOLD circuit to O7, minifonion uses RIBN controller circuit settings
# -------------------------------------------------

[copy]
    input = _FOLDRANGEPOT * 2
    output = _FOLDRANGE

[lfo]
    hz = _FOLDCVPOT * _FOLDRANGE
    triangle = _FOLDCV

[lfo]
    hz = _FOLDMINPOT * _FOLDRANGE
    triangle = _FOLDMIN

[lfo]
    hz = _FOLDMAXPOT * _FOLDRANGE
    triangle = _FOLDMAX

[lfo]
    hz = _FOLDBYPOT * _FOLDRANGE
    triangle = _FOLDBY
    level = 2V

[fold]
    input = _FOLDCV
    minimum = _FOLDMIN
    maximum = _FOLDMAX
    foldby = _FOLDBY
    output = _FOLDOUT

# Minifonion to quantize the FOLD circuit's V/O sharing root, degree and selects with the Arpeggiator
# output to O6 Base note stays at _ROOT = 0V if complete semitone scale allowed
[minifonion]
    input = _FOLDOUT
    degree = _DEGREE
    root = _ROOT
    transpose = _EQ1_NUDGE
    select1 = _EQ1_SEL_1 * _NOT_RIBN_SCALE + _RIBN_FILLS
    select3 = _EQ1_SEL_3 * _NOT_RIBN_SCALE + _RIBN_FILLS
    select5 = _EQ1_SEL_5 * _NOT_RIBN_SCALE + _RIBN_FILLS
    select7 = _EQ1_SEL_7 * _NOT_RIBN_SCALE + _RIBN_FILLS
    select9 = _EQ1_SEL_9 * _NOT_RIBN_SCALE + _RIBN_FILLS
    select11 = _EQ1_SEL_11 * _NOT_RIBN_SCALE + _RIBN_FILLS
    select13 = _EQ1_SEL_13 * _NOT_RIBN_SCALE + _RIBN_FILLS
    selectfill1 = _RIBN_SCALE * _RIBN_FILLS
    selectfill2 = _RIBN_SCALE * _RIBN_FILLS
    selectfill3 = _RIBN_SCALE * _RIBN_FILLS
    selectfill4 = _RIBN_SCALE * _RIBN_FILLS
    selectfill5 = _RIBN_SCALE * _RIBN_FILLS
#   tuningpitch = _TUNPITCH
#   tuningmode = _TUNMODE
    bypass = _RIBN_QUANT_OFF
    output = O7

[copy]
    input = O7 * _BLUE
    output = R15

# -------------------------------------------------
# RIBBON Controller V/O from I8 quantized to O8 by Minifonion sharing root, degree and selects with the Arpeggiator, Base note stays at _ROOT = 0V if complete semitone scale allowed
# -------------------------------------------------

[copy]
    input = -1 * _RIBN_SCALE + 1 # 1 if complete scale allowed
    output = _NOT_RIBN_SCALE # 0 if complete scale allowed (to inhibit the _SEL_n)

# [switch]
#   input1 = _PITCH_USED
#   input2 = _ROOT
#   output1 = _PITCH_RIBN
#   offset = _RIBN_FILLS

# _RIBN_SCALE enables the regular scale, _RIBN_FILLS with all semitones, _RIBN_QUANT_OFF overrides
[minifonion]
    input = I8
    degree = _DEGREE
    root = _ROOT
    transpose = _EQ1_NUDGE
    select1 = _EQ1_SEL_1 * _NOT_RIBN_SCALE + _RIBN_FILLS
    select3 = _EQ1_SEL_3 * _NOT_RIBN_SCALE + _RIBN_FILLS
    select5 = _EQ1_SEL_5 * _NOT_RIBN_SCALE + _RIBN_FILLS
    select7 = _EQ1_SEL_7 * _NOT_RIBN_SCALE + _RIBN_FILLS
    select9 = _EQ1_SEL_9 * _NOT_RIBN_SCALE + _RIBN_FILLS
    select11 = _EQ1_SEL_11 * _NOT_RIBN_SCALE + _RIBN_FILLS
    select13 = _EQ1_SEL_13 * _NOT_RIBN_SCALE + _RIBN_FILLS
    selectfill1 = _RIBN_SCALE * _RIBN_FILLS
    selectfill2 = _RIBN_SCALE * _RIBN_FILLS
    selectfill3 = _RIBN_SCALE * _RIBN_FILLS
    selectfill4 = _RIBN_SCALE * _RIBN_FILLS
    selectfill5 = _RIBN_SCALE * _RIBN_FILLS
#   tuningpitch = _TUNPITCH
#   tuningmode = _TUNMODE
    bypass = _RIBN_QUANT_OFF
    output = O8

[copy]
    input = O8 * _VIOLET
    output = R16

# -------------------------------------------------
# THIS IS: The end.
# -------------------------------------------------
